{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n  <body>\n  <h1>Tic Tac Toe!</h1>\n  <board></board>\n  </body>\n  `,\n  styles: [`\n  body {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    margin: 0px;\n    padding: 0px;\n    height: 100vh;\n    width: 100vw;\n    font-family: sans-serif;\n    color: white;\n    background-color: rgb(50,50,50);\n  }\n  h1 {\n    font-size: 50px;\n    filter: drop-shadow(0 0 0.75rem black);\n  }\n  board {\n    filter: drop-shadow(0 0 0.75rem black);\n  }\n  `]\n})\nexport class AppComponent {\n  title = 'TickTacToe';\n}\n\n@Component({\n  selector: 'board',\n  template: `\n  <div class=\"row\" *ngFor=\"let row of [0,1,2]\">\n    <square \n    *ngFor=\"let col of [0,1,2]\" \n    [state]=\"squares[col+row*3]\"\n    (click)=\"makeMove(col+row*3)\">\n    </square>\n  </div>\n  <div class=\"status\">{{status}}</div>\n  <div class=\"center\">\n    <button (click)=\"newGame()\">Reset Game</button>\n  </div>\n  `,\n  styles: [`\n  .row {\n    clear: both;\n  }\n  .status {\n    text-align: center;\n    font-size: 30px;\n  }\n  .center {\n    display: flex;\n    justify-content: center;\n  }\n  button {\n    background-color: rgb(60,60,60); \n    border: none;\n    color: white;\n    padding: 15px 32px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 24px;\n    margin: 20px 2px;\n    transition: all 0.2s;\n  }\n  button:hover {\n    color: #000000;\n    background-color: rgb(190,190,190);\n    transition: all 0.2s;\n  }\n  `]\n  \n})\nexport class Board {\n  squares = Array(9).fill(null);\n  player = \"X\";\n  winner = null;\n\n  public newGame() {\n    this.squares = Array(9).fill(null);\n    this.player = \"X\";\n    this.winner = null;\n  }\n\n  get status() {\n    return this.winner ? `${this.winner} wins!` :\n    `Player ${this.player}'s turn`;\n  }\n  makeMove(position) {\n    if (!this.winner && !this.squares[position]){\n      this.squares[position] = this.player;\n      if (this.winningMove()) {\n        this.winner = this.player;\n      }\n      this.player = this.player == \"X\" ? \"O\" : \"X\";\n    }\n  }\n  winningMove(): boolean {\n    const lines = [\n      [0,1,2], [3,4,5], [6,7,8], //rows\n      [0,3,6], [1,4,7], [2,5,8], //cols\n      [0,4,8], [2,4,6] //diags\n    ];\n    for (let line of lines) {\n      if (this.squares[line[0]] && this.squares[line[0]] == this.squares[line[1]] && this.squares[line[1]] == this.squares[line[2]]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  \n}\n\n@Component({\n  selector: \"square\",\n  template: \"{{state}}\",\n  styles: [`\n  :host {\n    width: 128px;\n    height: 128px;\n    border: solid 2px gray;\n    float: left;\n    font-size: 100px;\n    text-align: center;\n  }`]\n})\nexport class Square {\n  @Input() state;\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent, Board, Square } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Board,\n    Square\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}